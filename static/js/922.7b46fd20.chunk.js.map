{"version":3,"file":"static/js/922.7b46fd20.chunk.js","mappings":"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","sources":["store/drawer.ts","components/Drawer/MenuButton.tsx","components/Drawer/RestartDialogAndButton.tsx","components/Drawer/DrawerContent.tsx","components/Drawer/DrawerActions.tsx","components/Drawer/DrawerBackdrop.tsx","components/Drawer/Drawer.tsx","components/Footer.tsx","store/combinationDescDialogVisibility.ts","store/dices.ts","store/endOfGameVisibility.ts","store/history.ts","store/matchedView.ts","store/restartGame.ts"],"sourcesContent":["import { builder } from \"@helpers/localStorage\"\n\nexport const {\n    signal: drawer,\n    update,\n    toggle,\n} = builder(\"drawer\", false)\n","import cx from \"classnames\"\nimport { isDark } from \"@store/theme\"\nimport icon from \"@icons/icon.svg\"\nimport { drawer, toggle } from \"@store/drawer\"\n\nexport function MenuButton() {\n    const open = drawer.value\n    const bgImage = `url('${icon}#${\n        open\n            ? isDark.value ? \"close-white\" : \"close\"\n            : isDark.value ? \"menu-white\" : \"menu\"\n    }')`\n\n    return (\n        <button\n            onClick={toggle}\n            style={{\n                backgroundImage: bgImage,\n                // animationFillMode: \"forwards\",\n            }}\n            className={cx(\n                \"z-50 w-10 h-10 fixed lg:top-6 lg:left-6 bottom-11 right-5 rounded\",\n                \"bg-no-repeat bg-center bg-cover\",\n                \"animate-button\",\n            )}\n        />\n    )\n}\n","import { i18n } from '@helpers/i18n'\nimport { useCallback } from 'react'\nimport { createPortal } from 'react-dom'\nimport { Backdrop } from '../Backdrop'\nimport { useStateToggle } from '@helpers/useStateToggle'\nimport { KeyboardActions } from '@helpers/KeyboardActions'\nimport { update } from \"@store/drawer\"\nimport { restartGame } from \"@store/restartGame\"\n\nexport function RestartDialogAndButton() {\n    const [open, toggle] = useStateToggle()\n    const restart = useCallback(function () {\n        restartGame()\n        update(false)\n    }, [])\n\n    return (\n        <>\n            <button type=\"button\" onClick={toggle}>\n                {i18n('button.restartGame')}\n            </button>\n            {open && createPortal(\n                <>\n                    <KeyboardActions actions={{ Escape: toggle }} />\n                    <Backdrop onClick={toggle} />\n                    <div\n                        className=\"bg-[--background-color] object-center z-50 p-5 rounded shadow-2xl flex gap-5 whitespace-nowrap\"\n                    >\n                        <button type=\"button\" onClick={toggle}>\n                            {i18n(\"button.cancel\")}\n                        </button>\n                        <button type=\"button\" onClick={function () {\n                            toggle()\n                            restart()\n                        }}>\n                            {i18n(\"button.restartGame\")}\n                        </button>\n                    </div>\n                </>,\n                document.body,\n            )}\n        </>\n    )\n}\n","import { RestartDialogAndButton } from './RestartDialogAndButton'\n\nexport function DrawerContent() {\n    return (\n        <>\n            <div>change game select</div>\n            <RestartDialogAndButton />\n            <div>SettingsTabContent</div>\n            <div>HistoryTab</div>\n        </>\n    )\n}","import { KeyboardActions } from \"@helpers/KeyboardActions\"\nimport { toggle } from \"@store/drawer\"\nimport { combinationDescDialogVisibility } from \"@store/combinationDescDialogVisibility\"\nimport { endOfGameVisibility } from \"@store/endOfGameVisibility\"\n\nexport function DrawerActions() {\n    return (\n        <>\n            {combinationDescDialogVisibility.value === null && endOfGameVisibility.value && (\n                <KeyboardActions actions={{ Escape: toggle }} />\n            )}\n        </>\n    )\n}\n","import { drawer, toggle } from \"@store/drawer\"\nimport { Backdrop } from \"@components/Backdrop\"\n\nexport function DrawerBackdrop() {\n    return (\n        <>\n            {drawer.value && (\n                <Backdrop onClick={toggle} />\n            )}\n        </>\n    )\n}\n","import { Footer } from \"../Footer\"\nimport cx from \"classnames\"\nimport { MenuButton } from \"./MenuButton\"\nimport { DrawerContent } from './DrawerContent'\nimport { drawer } from \"@store/drawer\"\nimport { useSignals } from \"@preact/signals-react/runtime\"\nimport { DrawerActions } from \"@components/Drawer/DrawerActions\"\nimport { DrawerBackdrop } from \"@components/Drawer/DrawerBackdrop\"\n\nexport default function Drawer() {\n    useSignals()\n\n    return (\n        <>\n            <DrawerActions />\n            <DrawerBackdrop />\n            <div className={cx(\n                \"z-50\",\n                \"w-80 pt-28 px-5\",\n                \"fixed top-0 left-0 h-full\",\n                \"transition-transform duration-100\",\n                \"bg-[--background-color] text-[--text-color]\",\n                drawer.value ? \"shadow-xl translate-x-0\" : \"shadow-none -translate-x-80\",\n            )}>\n                <div className=\"h-full -mb-20\">\n                    <DrawerContent />\n                </div>\n                <Footer />\n            </div>\n            <MenuButton />\n        </>\n    )\n}\n","export function Footer() {\n    return (\n        <footer className=\"select-none flex items-center justify-center h-20\">\n            bonez &copy; 2023\n        </footer>\n    )\n}\n","import type { Combination } from \"@components/Combinations/combinationsData\"\nimport { builder } from \"@helpers/localStorage\"\n\ntype DialogVisibility = Combination | null\n\nexport const {\n    signal: combinationDescDialogVisibility,\n    update: updateDialogVisibility,\n} = builder<DialogVisibility>(null, null)\n","import { builder } from \"@helpers/localStorage\"\nimport { CommonBuilderType } from \"@store/types\"\n\nexport type DicesType = number[]\n\ntype Selected<T> = CommonBuilderType<T, {\n    update(value: T): void\n    reset(): void\n}>\n\ntype Result<T> = CommonBuilderType<T, {\n    reset(): void\n    update(value: T): void\n    selected: Selected<number[]>\n}>\n\nexport const dices = (function (): Result<number[]> {\n    const defaultValue = [-1, -1, -1, -1, -1]\n    const { signal, update } = builder<number[]>(\"dices\", defaultValue)\n\n    const {\n        signal: selected,\n        update: updateSelected,\n    } = builder<number[]>(\"dicesSelected\", [])\n\n    return {\n        get value() {\n            return signal.value\n        },\n        update(value) {\n            update(value)\n        },\n        reset() {\n            update(defaultValue)\n        },\n\n        selected: {\n            get value() {\n                return selected.value\n            },\n            update(value) {\n                updateSelected(value)\n            },\n            reset() {\n                updateSelected([])\n            },\n        },\n    }\n})()\n","import { builder } from \"@helpers/localStorage\"\n\nexport const {\n    signal: endOfGameVisibility,\n    update: updateEndOfGameVisibility,\n    toggle: toggleEndOfGameVisibility,\n} = builder<boolean>(null, true)\n","import { builder } from \"@helpers/localStorage\"\nimport { Combination } from \"@components/Combinations/combinationsData\"\nimport { computed } from \"@preact/signals-react\"\nimport { dices, DicesType } from \"@store/dices\"\nimport { createCopy } from \"@helpers/createCopy\"\nimport { players } from \"@store/players/players\"\n\nexport interface Move {\n    tries: DicesType[]\n    result: {\n        [key in Combination]?: number\n    }\n    dicesSelected: DicesType[]\n}\n\ntype History = Record<string, Move[]>\n\nexport const history = (function () {\n    const { signal: s, update } = builder<History>(\"history\", {})\n\n    return {\n        get value() {\n            return s.value\n        },\n        update(value: History) {\n            update(value)\n        },\n        get activePlayer() {\n            return computed(function () {\n                return s.value[players.activeId] || []\n            }).value\n        },\n        player(playerId: string) {\n            return s.value[playerId]\n        },\n        updateActivePlayerResult({ combination, points }: { combination: Combination, points?: number }) {\n            const copy = createCopy(this.activePlayer)\n\n            if (!copy.length) {\n                copy.push({\n                    result: {},\n                    dicesSelected: [],\n                    tries: [],\n                })\n            }\n\n            const lastElementIndex = copy.length - 1\n            copy[lastElementIndex].result[combination] = points\n            this.updateActivePlayer(copy)\n        },\n        updateActivePlayer(value: Move[]) {\n            const copy = createCopy(s.value)\n            copy[players.activeId] = value\n            this.update({ ...copy })\n        },\n        updateDices() {\n            const copy = createCopy(this.activePlayer)\n\n            if (players.activeShot === 1) {\n                copy.push({\n                    tries: [dices.value],\n                    result: {},\n                    dicesSelected: [],\n                })\n            } else {\n                const lastElementIndex = copy.length - 1\n                copy[lastElementIndex].tries.push(dices.value)\n                copy[lastElementIndex].dicesSelected.push(dices.selected.value)\n            }\n\n            this.updateActivePlayer(copy)\n        },\n    }\n})()\n","import { builder } from \"@helpers/localStorage\"\nimport { createCopy } from \"@helpers/createCopy\"\n\nexport enum MatchedView {\n    points,\n    preview,\n}\n\ntype MatchedViewType = Record<string, MatchedView>\n\nexport const matchedView = (function () {\n    const { signal, update } = builder<MatchedViewType>(\"matchedView\", {})\n\n    return {\n        getByPlayerId(playerId: string) {\n            return signal.value[playerId]\n        },\n        toggle(playerId: string) {\n            const copy = createCopy(signal.value)\n\n            copy[playerId] = copy[playerId] === MatchedView.points\n                ? MatchedView.preview\n                : MatchedView.points\n\n            update(copy)\n        },\n        reset() {\n            update({})\n        }\n    }\n})()\n","import { dices } from \"@store/dices\"\nimport { GamePhases, updateGamePhase } from \"@store/gamePhase\"\nimport { updateChildPlay } from \"@store/childPlay\"\nimport { history } from \"@store/history\"\nimport { players } from \"@store/players/players\"\nimport { matchedView } from \"@store/matchedView\"\n\nexport function restartGame() {\n    dices.reset()\n    dices.selected.reset()\n    updateGamePhase(GamePhases.PRE_GAME)\n    updateChildPlay(false)\n    history.update({})\n    players.points.reset()\n    players.columnView.reset()\n\n    players.reset()\n    matchedView.reset()\n}\n"],"names":["_builder","builder","drawer","signal","update","toggle","MenuButton","open","value","bgImage","concat","icon","isDark","_jsx","onClick","style","backgroundImage","className","cx","RestartDialogAndButton","_useStateToggle","useStateToggle","_useStateToggle2","_slicedToArray","restart","useCallback","restartGame","_jsxs","_Fragment","children","type","i18n","createPortal","KeyboardActions","actions","Escape","Backdrop","document","body","DrawerContent","DrawerActions","combinationDescDialogVisibility","endOfGameVisibility","DrawerBackdrop","Drawer","useSignals","Footer","updateDialogVisibility","dices","defaultValue","_builder2","selected","updateSelected","_update","_x","apply","arguments","toString","reset","updateEndOfGameVisibility","toggleEndOfGameVisibility","history","s","activePlayer","computed","players","activeId","player","playerId","updateActivePlayerResult","_ref","combination","points","copy","createCopy","this","length","push","result","dicesSelected","tries","updateActivePlayer","_objectSpread","updateDices","activeShot","lastElementIndex","MatchedView","matchedView","getByPlayerId","preview","updateGamePhase","GamePhases","PRE_GAME","updateChildPlay","columnView"],"sourceRoot":""}